{"type":"javascript","name":"荟萃浏览器接口模拟 for Via","version":"1","tags":["工具脚本"],"synopsis":"模拟荟萃浏览器接口，以便 Via 安装和使用用于荟萃浏览器的脚本。","detail":"<p><strong>仅适用于 Via 浏览器</strong></p><p><br></p><p>这个脚本模拟荟萃浏览器的接口，以便 Via 可以安装并使用荟萃浏览器的脚本。</p><p><br></p><p><em>即使不安装它，也可以通过在 </em><a rel=\"noopener noreferrer\" href=\"http://uujian.cn/webapp/store/index.html\"><em>荟萃浏览器共享插件</em></a><em> </em></p><p><em>复制荟萃脚本的代码来安装荟萃的脚本。</em></p><p><em>它仅提供非常小的兼容能力。</em></p><p><br></p><p>当前支持模拟的接口有 :</p><p><br></p><pre spellcheck=\"false\" class=\"ql-syntax\">meta.openWindow\n</pre><p>在新窗口打开指定网址</p><p>使用 window.open()。</p><p><br></p><pre spellcheck=\"false\" class=\"ql-syntax\">meta.loadUrl\n</pre><p>加载指定网址</p><p>使用 location.assign()。</p><p>由于 meta.loadUrl 可设置加载时使用的 请求头 和 UA ,</p><p>Via 无法实现，忽略选项参数。</p><pre spellcheck=\"false\" class=\"ql-syntax\">meta.copy\n</pre><p>复制指定文字</p><p>使用建立隐藏文本框自动复制实现。</p><p><br></p><pre spellcheck=\"false\" class=\"ql-syntax\">meta.toast\n</pre><p>弹出 Toast</p><p>荟萃的 toast 可设置显示时间，可加个按钮，</p><p>可设置点击按钮执行回调脚本。</p><p>这里使用 div 和 CSS 建立 toast 。</p><p><br></p><pre spellcheck=\"false\" class=\"ql-syntax\">meta.putAdbRule\n</pre><p>添加广告标记规则</p><p>裁切成域名和规则，</p><p>然后调用 via.record() 添加规则。</p><p>忽略地址参数。</p><pre spellcheck=\"false\" class=\"ql-syntax\">meta.getManifestArray\n</pre><p>上报用户已安装的脚本清单数组</p><p>挑出七位数以上的正数或负数 ID 上报，</p><p>其它信息无法获取，全部留空。</p><p><br></p><pre spellcheck=\"false\" class=\"ql-syntax\">meta.putWebApp\n</pre><p>安装脚本和小程序</p><p>参数是指向 JSON 文件的 URL 。</p><p>将会获取并解析 JSON 安装脚本。</p><p>只支持单个的 JS，不支持荟萃小程序。</p><p>由于获取是异步进行的，</p><p><em>所以总是最先返回安装成功</em>，</p><p>请以 Via 的 toast 为准。</p><p><br></p><pre spellcheck=\"false\" class=\"ql-syntax\">meta.removeWebApp\n</pre><p>删除脚本和小程序</p><p>使用仅提供 ID ，其它为空的对象，</p><p>调用 via.addon() 以便卸载脚本。</p><p><br></p><pre spellcheck=\"false\" class=\"ql-syntax\">meta.getInfo\n</pre><p>获取浏览器信息</p><p>使用 <a rel=\"noopener noreferrer\" href=\"http://uujian.cn/webapp/store/js/meta.js\">荟萃的函数库</a> 提供的空模版。</p><p><br></p><p>注意事项：</p><p><br></p><ol><li><strong>由于各种原因，不保证安装的脚本一定可用</strong>。</li><li>由于荟萃浏览器接口太多了 (160+)，不可能实现所有接口，<strong>因此肯定会有脚本有兼容问题</strong>。</li><li>Via 和荟萃的夜间模式是不同的，<strong>所以依赖夜间模式的脚本不会生效</strong>。</li><li>由于 Via 脚本加载时机不确定。如果无法安装脚本，请刷新网页。多次刷新无效的话，请尝试禁用新安装的脚本后刷新网页。</li><li>此脚本不支持低于 WebView 47 的系统内核。</li></ol><p><br></p><p>这个脚本使用了 Bext 的函数库，</p><p>如需二次发布 ( 分享，搬运 等等 ) ，</p><p>需要在显著位置包含如下 MIT 许可文本:</p><pre spellcheck=\"false\" class=\"ql-syntax\">MIT License\nCopyright (c) 2022 ikkz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</pre><p><br></p>","source":"import { base64 } from '@bext/util';\nimport { toast } from '@bext/ui';\n\nwindow.meta = {\n  copy: s => {\n    let ha = document.createElement(\"textarea\");\n    ha.style.cssText = \"position:absolute;top:-100%\";\n    ha.setAttribute(\"readonly\", \"\");\n    ha.value = s;\n    document.body.appendChild(ha);\n    ha.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(ha);\n  },\n  loadUrl: u => location.assign(u),\n  openWindow: u => window.open(u),\n  toast: (t, s, c) => {\n    let btn = {};\n    if (c && typeof c == 'object') {\n      btn.text = c.text;\n      btn.onclick = c.callback;\n    }\n    toast(t, s, btn);\n  },\n  getInfo: () => {\n    return JSON.stringify({\n      imei: \"0\",\n      userName: \"0\",\n      deadline: 0,\n      sdkVersion: 28,\n      versionCode: 92,\n      versionName: \"2.7.4\",\n      installTime: 0,\n      packageName: \"cn.uujian.browser\",\n      exp: 6,\n      point: 10\n    });\n  },\n  getManifestArray: () => {\n    let vgia = JSON.parse(window.via.getInstalledAddonID()), ret = [];\n    vgia.forEach(i => { // 七位数以上的正数或负数\n      if (parseInt(Math.abs(i) / 1000000) >= 1) {\n        ret.push({ id: i, type: 1, name: '', home: '', version: 0, host: '', author: '', icon: '', brief: '' });\n      }\n    });\n    return JSON.stringify(ret);\n  },\n  removeWebApp: id => {\n    if (JSON.parse(window.via.getInstalledAddonID()).includes(id)) {\n      via.addon(btoa(JSON.stringify({ id: id, name: '', author: '', url: '', code: '' })));\n    }\n  },\n  putWebApp: u => {\n    fetch(u).then(r => r.json()).then(d => {\n      let ia = d.array[0], iu = ia.manifest.host;\n      if (ia.html.length == 0 && ia.js.length == 1) {\n        via.addon(base64(JSON.stringify({\n          id: ia.manifest.id,\n          name: ia.manifest.name,\n          author: ia.manifest.author,\n          url: (iu !== '') ? iu : '*',\n          code: ia.res[0].data\n        })))\n      } else via.toast('不支持小程序');\n    });\n    return true;\n  },\n  putAdbRule: r => {\n    let rule;\n    if (r.include('##')) {\n      rule = r.split('##');\n      via.record(rule[0], rule[1]);\n    } else {\n      via.record(location.host, r);\n    }\n  }\n}"}