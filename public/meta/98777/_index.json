{"versions":[{"hash":"883d074d8349286c74eb054aff97e576817c9f49","date":1639924709,"message":"更新 lib/ui.js 和 bextBar 示例脚本 注意，新加入了 98777 改名为 纪念模式","author_name":"Lemon399","author_email":"1446744399@qq.com","version":"2"}],"meta":{"type":"javascript","name":"纪念模式","version":"2","tags":["美化脚本"],"synopsis":"bextBar 版本的 纪念模式，让网页变为黑白样式","detail":"<p>bextBar 示例脚本，增加 <span style=\"background-color: rgb(102, 163, 224); color: rgb(255, 255, 255);\"> 打开纪念模式 </span><span style=\"background-color: rgb(0, 0, 0); color: rgb(255, 255, 255);\"> 按钮。</span></p><p><span style=\"background-color: rgb(0, 0, 0); color: rgb(255, 255, 255);\">使用 CSS</span><a style=\"background-color: rgb(0, 0, 0); color: rgb(255, 255, 255);\" rel=\"noopener noreferrer\" href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/filter\"> filter </a><span style=\"background-color: rgb(0, 0, 0); color: rgb(255, 255, 255);\">滤镜实现。</span></p>","extra":{"xMetaComment":"// @run-at document-idle"},"source":"import { runOnce, addStyle } from '@bext/util';\nimport { getBextBar } from '@bext/ui';\n\nrunOnce(() => {\n    let style = null, text = ['打开纪念模式','关闭纪念模式'];\n    getBextBar().add('gray', {\n        text: text[0],\n        callback: (bar) => {\n            let button = bar.query('gray');\n            if (button.text == text[0]) {\n                style = addStyle(':root { filter : grayscale(1) !important; }');\n                bar.change('gray', {\n                    text: text[1],\n                    backcolor: 'black'\n                });\n            } else {\n                document.head.removeChild(style);\n                bar.change('gray', {\n                    text: text[0],\n                    backcolor: 'deepskyblue'\n                });\n            }\n        },\n        textcolor: 'white',\n        backcolor: 'deepskyblue'\n    })\n})","build":"(function () {\n  'use strict';\n\n  const id = decodeURIComponent('98777');\n\n  function runOnce(fn) {\n    const uniqId = 'BEXT_UNIQ_ID_' + id;\n    if (window[uniqId]) {\n      return;\n    }\n    window[uniqId] = true;\n    fn && fn();\n  }\n\n  function addElement({ tag, attrs = {}, to = document.body }) {\n    const el = document.createElement(tag);\n    Object.assign(el, attrs);\n    to.appendChild(el);\n    return el;\n  }\n\n  function addStyle(css) {\n    return addElement({\n      tag: 'style',\n      attrs: {\n        textContent: css,\n      },\n      to: document.head,\n    });\n  }\n\n  \n  function getBextBar() {\n      if (!document.querySelector('#bextBar')) {\n          let bar, sty, buttons = [], pos = [], downPos = 0,\n              first, unlock = () => document.onmousemove = null,\n              isObj = o => (typeof o == 'object' && !(o instanceof Array || o instanceof Function)),\n              optCheck = (opt, strict) => {\n                  if (!isObj(opt) || (!opt.backcolor && !opt.textcolor && !opt.text && !opt.callback)) return 2;\n                  if ((strict || opt.text) && (typeof opt.text !== 'string' || opt.text == '')) return 3;\n                  if ((strict || opt.callback) && typeof opt.callback !== 'function') return 4;\n                  if (opt.backcolor && (typeof opt.backcolor !== 'string' || opt.backcolor == '')) return 5;\n                  if (opt.textcolor && (typeof opt.textcolor !== 'string' || opt.textcolor == '')) return 6;\n                  return 0;\n              };\n\n          bar = document.createElement('div');\n          sty = document.createElement('style');\n          first = document.createElement('div');\n          first.id = 'bextBarExpand';\n          first.onclick = function (e) {\n              if ('ontouchend' in document || Math.abs(downPos - (e.clientX * e.clientY)) <= 50) bar.classList.toggle('close');\n          };\n          if ('ontouchend' in document) {\n              first.addEventListener('touchstart', function (e) {\n                  pos = [\n                      (e.touches[0].clientX - bar.offsetLeft),\n                      (e.touches[0].clientY - bar.offsetTop)\n                  ];\n              }, { passive: true });\n              first.addEventListener('touchmove', function (e) {\n                  bar.style.left = (e.touches[0].clientX - pos[0]) + 'px';\n                  bar.style.top = (e.touches[0].clientY - pos[1]) + 'px';\n              }, { passive: true });\n          } else {\n              first.addEventListener('mousedown', function (e) {\n                  pos = [\n                      (e.clientX - bar.offsetLeft),\n                      (e.clientY - bar.offsetTop)\n                  ];\n                  downPos = e.clientX * e.clientY;\n                  document.onmousemove = function (e) {\n                      if (Math.abs(downPos - (e.clientX * e.clientY)) > 50) {\n                          bar.style.left = (e.clientX - pos[0]) + 'px';\n                          bar.style.top = (e.clientY - pos[1]) + 'px';\n                      }\n                  };\n                  document.removeEventListener('mouseup', unlock);\n                  document.addEventListener('mouseup', unlock);\n              });\n          }\n          bar.appendChild(first);\n          sty.innerText = `\n        #bextBar {\n            position: fixed;\n            display: block;\n            max-width: 80vw;\n            height: max-content;\n            top: calc(95vh - 110px);\n            margin: 5px;\n            padding: 2px;\n            background: white;\n            border-radius: 5px;\n            z-index: 1000000;\n            box-shadow: 0 2px 5px gray;\n            user-select: none;\n        }\n        #bextBar.close {\n            width: 23px;\n            height: 33px;\n            overflow: clip;\n        }\n        #bextBarExpand {\n            margin: 10px;\n            margin-right: 0;\n            padding: 0;\n            border-width: 4px 0 0 4px;\n            border-color: #333 transparent transparent #333;\n            border-style: solid none none solid;\n            width: 10px;\n            height: 10px;\n            transform: rotate(315deg);\n            float: left;\n        }\n        #bextBar.close #bextBarExpand {\n            transform: rotate(135deg);\n            margin-left: 3px;\n        }\n        .bextButton {\n            margin: 5px .5em;\n            padding: 4px .75em;\n            background: whitesmoke;\n            color: #333;\n            border: none;\n            outline: none;\n            border-radius: 1em;\n            font-size: 13px;\n            line-height: 13px;\n            width: auto;\n            box-shadow: 0 2px 2px lightgray;\n            transition: opacity .5s, background-color .25s, color .25s;\n        }\n        .bextButton span {\n            margin: .125rem;\n            display: inline;\n        }\n        .delButton {\n            font-family: sans-serif;\n        }\n        .ghost {\n            opacity: 0.5;\n        }\n        #bextGhostBox {\n            position: fixed;\n            left: -150%;\n            top: -150%;\n            background: transparent;\n            z-index: 1000001;\n        }\n        #bextGhost {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: max-content;\n            opacity: 2;\n        }\n        @media (prefers-color-scheme: dark) {\n            #bextBar {\n                background: #283344;\n                box-shadow: 0 0 2px #3b81ff;\n            }\n            #bextBarExpand {\n                border-color: #3b81ff transparent transparent #3b81ff;\n            }\n            .bextButton {\n                background: #4c5161;\n                color: #ddf;\n                box-shadow: 0 0 5px #3b81ff;\n            }\n        }\n        `;\n          document.head.appendChild(sty); bar.id = 'bextBar';\n          document.body.appendChild(bar);\n\n          Object.assign(bar,{\n              queryAll: function () { return buttons },\n              del: function (id) {\n                  if (!buttons.includes(id)) return 1;\n                  let button = this.querySelector(`#bextButton-${id}`);\n                  if (button) this.removeChild(button);\n                  buttons.splice(buttons.indexOf(id), 1);\n                  return 0;\n              },\n              query: function (id) {\n                  if (!buttons.includes(id)) return 1;\n                  let button = this.querySelector(`#bextButton-${id}`);\n                  if (!button) {\n                    buttons.splice(buttons.indexOf(id), 1);\n                    return 8;\n                  }\n                  return {\n                      button: button,\n                      text: button.querySelector('span').innerText,\n                      backcolor: button.style.backgroundColor,\n                      textcolor: button.style.color\n                  }\n              },\n              change: function (id, opt) {\n                  if (!buttons.includes(id)) return 1;\n                  let optret = optCheck(opt, false);\n                  if (optret !== 0) return optret;\n                  let button = this.querySelector(`#bextButton-${id}`);\n                  if (button) {\n                      if (opt.textcolor) button.style.color = opt.textcolor;\n                      if (opt.backcolor) button.style.backgroundColor = opt.backcolor;\n                      if (opt.text) button.querySelector('span').innerText = opt.text;\n                      if (opt.callback) button.onclick = opt.callback.bind(window, this, button);\n                      return 0;\n                  } else {\n                    buttons.splice(buttons.indexOf(id), 1);\n                    return 8;\n                  }\n              },\n              add: function (id, opt) {\n                  if (!id || !isObj(opt)) return 1;\n                  opt = Object.assign({\n                      text: '按钮'\n                  }, opt);\n                  if (typeof id !== 'string') return 7;\n                  let optret = optCheck(opt, true);\n                  if (optret !== 0) return optret;\n                  if (!this.querySelector(`#bextButton-${id}`)) {\n                      let button = document.createElement('button'),\n                          btext = document.createElement('span');\n                      button.id = `bextButton-${id}`;\n                      button.className = 'bextButton';\n                      button.appendChild(btext);\n                      buttons.push(id);\n                      this.appendChild(button);\n                      let change = this.change(id, opt);\n                      if (change != 0) this.del(id);\n                      return change;\n                  } else return 10;\n              }\n          });\n      }\n      return document.querySelector('#bextBar');\n  }\n\n  runOnce(() => {\n      let style = null, text = ['打开纪念模式','关闭纪念模式'];\n      getBextBar().add('gray', {\n          text: text[0],\n          callback: (bar) => {\n              let button = bar.query('gray');\n              if (button.text == text[0]) {\n                  style = addStyle(':root { filter : grayscale(1) !important; }');\n                  bar.change('gray', {\n                      text: text[1],\n                      backcolor: 'black'\n                  });\n              } else {\n                  document.head.removeChild(style);\n                  bar.change('gray', {\n                      text: text[0],\n                      backcolor: 'deepskyblue'\n                  });\n              }\n          },\n          textcolor: 'white',\n          backcolor: 'deepskyblue'\n      });\n  });\n\n})();\n"},"hash":"883d074d8349286c74eb054aff97e576817c9f49"}